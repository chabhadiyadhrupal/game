using UnityEngine;
using UnityEngine.UI;
using System.Collections.Generic;

public class RegistrationScript : MonoBehaviour
{
    public InputField usernameInput;
    public InputField emailInput;
    public InputField passwordInput;
    public UserScript userPrefab;  // Reference to the UserScript prefab

    private List<UserScript> userList = new List<UserScript>();

    private void Start()
    {
        // Retrieve saved user data on startup
        LoadUserData();
    }

    public void RegisterUser()
    {
        string username = usernameInput.text;
        string email = emailInput.text;
        string password = passwordInput.text;

        // Validation logic here

        if (IsUsernameUnique(username))
        {
            // Instantiate a new UserScript prefab and set details
            UserScript newUser = Instantiate(userPrefab);
            newUser.SetUserDetails(username, email);
            userList.Add(newUser);

            // Save the user data
            SaveUserData();

            Debug.Log("User registered successfully!");
        }
        else
        {
            Debug.Log("Username already exists. Choose a different one.");
        }
    }

    private bool IsUsernameUnique(string username)
    {
        // Check if the username already exists in the user list
        return !userList.Exists(user => user.Username == username);
    }

    private void SaveUserData()
    {
        // Save user data using PlayerPrefs or another storage method
        // Example using PlayerPrefs:
        PlayerPrefs.SetInt("UserCount", userList.Count);

        for (int i = 0; i < userList.Count; i++)
        {
            PlayerPrefs.SetString("Username_" + i, userList[i].Username);
            PlayerPrefs.SetString("Email_" + i, userList[i].Email);
        }

        PlayerPrefs.Save();
    }

    private void LoadUserData()
    {
        // Load user data using PlayerPrefs or another storage method
        // Example using PlayerPrefs:
        int userCount = PlayerPrefs.GetInt("UserCount", 0);

        for (int i = 0; i < userCount; i++)
        {
            string username = PlayerPrefs.GetString("Username_" + i, "");
            string email = PlayerPrefs.GetString("Email_" + i, "");

            // Instantiate a new UserScript prefab and set details
            UserScript newUser = Instantiate(userPrefab);
            newUser.SetUserDetails(username, email);
            userList.Add(newUser);
        }
    }
}
